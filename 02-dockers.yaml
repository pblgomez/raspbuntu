---
- hosts: raspbuntu


  vars_files:
    - vars.yaml


  tasks:

    - name: Copy secret creds.json (eth_scrapper)
      copy:
        src: secrets/creds.json
        dest: ~/configs/eth_scrapper/creds.json
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'

    - docker_compose:
        project_name: pihole
        definition:
          version: '3.7'
          services:
            pihole:
              container_name: pihole
              image: pihole/pihole:v5.1.1
              environment:
                PUID: 1000
                PGID: 1000
                TZ: "{{ tz }}"
                WEBPASSWORD: "{{ pihole_password }}"
              ports:
                - "53:53/tcp"
                - "53:53/udp"
                - "67:67/udp"
                - "8080:80/tcp"
              volumes:
                 - '~/configs/pihole/etc-pihole/:/etc/pihole/'
                 - '~/configs/pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/'
              dns:
                - 127.0.0.1
                - 208.67.220.220
              # Recommended but not required (DHCP needs NET_ADMIN)
              #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
              cap_add:
                - NET_ADMIN
              restart: unless-stopped

            eth_scrapper:
              container_name: eth_scrapper
              image: pablogomez/eth_scrapper:latest
              environment:
                - ETH_WALLET=0x90D93e426aE653BD20fdD8e65459A321df01fF02
                - SHEET_NAME=TomasInv
                - WORKSHEET_NAME=Kuaili
              volumes:
                - ~/configs/eth_scrapper/creds.json:/app/creds.json
            restarter:
              container_name: eth_scrapper-restarter
              image: docker
              volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
              command: ["/bin/sh", "-c", "while true; do sleep 28800; docker restart eth_scrapper; done"]
              restart: unless-stopped


#       register: output
#     - debug:
#         var: output

    - name: Recursively change ownership of docker configs directory
      become: yes
      file:
        path: "/home/{{ ansible_user }}/configs"
        state: directory
        recurse: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
